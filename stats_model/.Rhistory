vtr = c(1, -2, -6)
vtrcrescente = c(sort(vtr, decreasing = F))
indice = c(1:length(vtr))
if(all(vtr==vtrcrescente)){
print(TRUE)
}
else{
print(FALSE)
}
vtr = c(1, -2, -6)
vtrcrescente = c(sort(vtr, decreasing = F))
indice = c(1:length(vtr))
if(all(vtr==vtrcrescente)){
print(TRUE)
} else{
print(FALSE)
}
vtr = c(1, -2, -6)
vtrcrescente = c(sort(vtr, decreasing = F))
indice = c(1:length(vtr))
if(all(vtr==vtrcrescente)){
print(TRUE)
}
else{
print(FALSE)
}
vtr = c(1, 2, 3)
vtrcrescente = c(sort(vtr, decreasing = F))
indice = c(1:length(vtr))
if(all(vtr==vtrcrescente)){
print(TRUE)
} else {
print(FALSE)
}
verifica_representacao <- function(n, b):
while n > 0:
r <- n %% 10
if r < b:
n <- n %/% 10
else: # se r >= b
return(FALSE)
if r < b:
return (TRUE)
verifica_representacao <- function(n, b):
while (n > 0){
r <- n %% 10
if (r < b){
n <- n %/% 10
} else{
return(FALSE)
}
}
if (r < b){
return (TRUE)
}
verifica_representacao <- function(n, b){
while (n > 0){
r <- n %% 10
if (r < b){
n <- n %/% 10
} else{
return(FALSE)
}
}
if (r < b){
return (TRUE)
}
}
verifica_representacao(12345, 10)
verifica_representacao(12345, 2)
verifica_representacao(12345, 3)
verifica_representacao(12345, 5)
setwd("~/Projects/repositories/stats-math")
library(tidyverse)
library(corrplot)
library(heatmaply)
# https://cran.r-project.org/web/packages/corrplot/vignettes/corrplot-intro.html
dados <- read_csv('dados.csv')
dados %>%
select(-Período) %>%
rename(
y = CIDP,
x1 = HMOD,
x2 = HSS) %>%
cor() ->
corr
## correlation matrix
corr %>%
corrplot(type = 'lower', order = 'hclust',
tl.col = 'black')
corr %>%
heatmap(symm = TRUE)
corr %>%
heatmaply_cor(
k_col = 2,
k_row = 2
)
## multicolinearidade: algumas variáveis preditoras estão correlacionadas
## a outras variáveis preditoras
## pode aumentar a variância dos coeficientes de regressão, tornando-os
## instáveis
## dificulda o entendimento dos efeitos isoaldos de x1 e x2 em y
## como identificar?
## sinais inesperados nos coeficientes, boa correlação com Y mas com
## problemas no t-Student
dados %>%
select(-Período) %>%
rename(
y = CIDP,
x1 = HMOD,
x2 = HSS) ->
data
(modelo <- lm(y ~ x1+x2, data = data))
## Como usamos apenas uma amostra de observações para
## estimar uma equação de regressão, podemos esperar que
## os coefi cientes de regressão variem se selecionarmos ou-
##   tra amostra de observações e estimarmos outra equação
## de regressão. Não queremos considerar repetidas amos-
##   tras; assim, precisamos de um teste empírico para ver se
## o coefi ciente de regressão estimado tem algum valor real
## (i.e., é diferente de zero?) ou se poderíamos esperar que
## ele se iguale a zero em outra amostra.
## teste de hipótese para cada coeficiente: t-Student
## H0: o coeficiente de cada variável independente é igual a zero
## H1: o coeficiente de cada variável independente é diferente de zero
## se o p-value (Pr(>|t|)) < 0.05, sim
## se o t-value < 1.96, sim
## F-statistic: há evidências de que pelo menos uma variável no modelo está
## relacionada com a variável dependente?
## H0: os coeficientes de todas as variáveis independentes são iguais a zero.
## H1: existe pelo menos um deles diferente de zero.
## se o p-value < 0.05, então sim, é relevante
## R squared: explicam qual % da variabilidade do do y?
summary(modelo)
(new_model <- lm(y ~ x2, data = data))
summary(new_model)
library(tidyverse)
setwd("~/Projects/repositories/stats-math/stats_model")
data <- read_csv('Aula12_exercícios.csv')
data
# (a)
model <- lm(Vendas ~ Preços + Primavera + Verão + Outono, data = data)
summary(model)
model
new_model <- lm(Vendas ~ Primavera + Verão)
summary(new_model)
new_model <- lm(Vendas ~ Primavera + Verão)
new_model <- lm(Vendas ~ Primavera + Verão, data = data)
summary(new_model)
predict(new_model)
data$Vendas
predict(new_model, 30, 1)
predict(new_model, c(30, 1))
data
predict(new_model, tibble(
preços = c(30, 30, 30, 30, 20, 40, 15, 15),
primavera = c(1, 0, 0, 0, 1, 0, 0, 0),
verão = c(0, 1, 0, 0, 0, 1, 0, 0),
outono = c(0, 0, 1, 0, 0, 0, 1, 0)
))
predict(model, tibble(
preços = c(30, 30, 30, 30, 20, 40, 15, 15),
primavera = c(1, 0, 0, 0, 1, 0, 0, 0),
verão = c(0, 1, 0, 0, 0, 1, 0, 0),
outono = c(0, 0, 1, 0, 0, 0, 1, 0)
))
# (a)
model <- lm(Vendas ~ Preços + Primavera + Verão + Outono, data = data)
predict(model, tibble(
preços = c(30, 30, 30, 30, 20, 40, 15, 15),
primavera = c(1, 0, 0, 0, 1, 0, 0, 0),
verão = c(0, 1, 0, 0, 0, 1, 0, 0),
outono = c(0, 0, 1, 0, 0, 0, 1, 0)
))
model
new_data <- data.frame(
preços = c(30, 30, 30, 30, 20, 40, 15, 15),
primavera = c(1, 0, 0, 0, 1, 0, 0, 0),
verão = c(0, 1, 0, 0, 0, 1, 0, 0),
outono = c(0, 0, 1, 0, 0, 0, 1, 0)
)
new_data
predict(model, new_data)
new_data <- data.frame(
Preços = c(30, 30, 30, 30, 20, 40, 15, 15),
primavera = c(1, 0, 0, 0, 1, 0, 0, 0),
verão = c(0, 1, 0, 0, 0, 1, 0, 0),
outono = c(0, 0, 1, 0, 0, 0, 1, 0)
)
predict(model, new_data)
new_data <- data.frame(
Preços = c(30, 30, 30, 30, 20, 40, 15, 15),
Primavera = c(1, 0, 0, 0, 1, 0, 0, 0),
Verão = c(0, 1, 0, 0, 0, 1, 0, 0),
Outono = c(0, 0, 1, 0, 0, 0, 1, 0)
)
predict(model, new_data)
data
model
summary(model)
new_data <- data.frame(
Preços = c(30, 30, 30, 30, 20, 40, 15, 15),
Primavera = c(1, 0, 0, 0, 1, 0, 0, 0),
Verão = c(0, 1, 0, 0, 0, 1, 0, 0),
Outono = c(0, 0, 1, 0, 0, 0, 1, 0)
)
predict(model, new_data)
new_model <- lm(Vendas ~ Preços + Primavera + Verão, data = data)
summary(new_model)
new_data <- data.frame(
Preços = c(30, 30, 30, 30, 20, 40, 15, 15),
Primavera = c(1, 0, 0, 0, 1, 0, 0, 0),
Verão = c(0, 1, 0, 0, 0, 1, 0, 0),
Outono = c(0, 0, 1, 0, 0, 0, 1, 0)
)
predict(new_model, new_data)
new_data <- data.frame(
Preços = c(30, 30, 30, 30, 20, 40, 15, 15),
Primavera = c(1, 0, 0, 0, 1, 0, 0, 0),
Verão = c(0, 1, 0, 0, 0, 1, 0, 0)
)
predict(new_model, new_data)
summary(new_model)
coefficients(new_model)
new_data <- data.frame(
Preços = c(30, 30, 30, 30, 20, 40, 15, 15),
Primavera = c(1, 0, 0, 0, 1, 0, 0, 0),
Verão = c(0, 1, 0, 0, 0, 1, 0, 0),
Outono = c(0, 0, 1, 0, 0, 0, 1, 0)
)
predict(new_model, new_data)
